import java.awt.EventQueue;
import java.awt.Graphics;

import javax.swing.JFrame;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTextPane;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * 
 * @author Ali Haydar Kurban
 *
 */
public class mainapp {

	private JFrame frame;

	/**
	 * Launch the application.
	 * This main function is generated by Windows Builder system
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					mainapp window = new mainapp();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	/**
	 * Create the application.
	 * Constructor creates frames, panels, buttons etc.
	 */
	public mainapp() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		
		double width = 770.0;
		double height = 700.0;
		double small_width = 57.0;
		double small_height = 81.0;
		double rCorx = 0.0;
		double rCory = 0.0;
		double small_length = 187.0;
		double small_radius = 111.0;
		
		//////////////////////////////////////RECTANGLE///////////////////////////////////////////////

		final Rectangle main_rectangle1 = new Rectangle(width,height,rCorx,rCory);
		final Rectangle small_rectangle1 = new Rectangle(small_width,small_height);
		main_rectangle1.setType("RECTANGLE");
		small_rectangle1.setType("rectangle");
		final ComposedShape shapes1 = new ComposedShape(main_rectangle1, small_rectangle1);
		shapes1.setBigChar('R');
		shapes1.setSmallChar('R');
		final int shapes1_counter = shapes1.optimalFit();

		final Rectangle main_rectangle2 = new Rectangle(width,height,rCorx,rCory);
		final Triangle small_triangle1 = new Triangle(small_length);
		main_rectangle2.setType("RECTANGLE");
		small_triangle1.setType("triangle");
		final ComposedShape shapes2 = new ComposedShape(main_rectangle2, small_triangle1);
		shapes2.setBigChar('R');
		shapes2.setSmallChar('T');
		final int shapes2_counter = shapes2.optimalFit();

		
		final Rectangle main_rectangle3 = new Rectangle(width,height,rCorx,rCory);
		final Circle small_circle1 = new Circle(small_radius);
		main_rectangle3.setType("RECTANGLE");
		small_circle1.setType("circle");
		final ComposedShape shapes3 = new ComposedShape(main_rectangle3, small_circle1);
		shapes3.setBigChar('R');
		shapes3.setSmallChar('C');
		final int shapes3_counter = shapes3.optimalFit();
		
		double length = 800.0;
		small_width = 110.0;
		small_height = 75.0;
		small_radius = 50.0;
		small_length = 95.0;
		double tCorx1 = length / 2.0, tCorx2 = 0.0, tCorx3 = length;
		double tCory1 = 0.0, tCory2 = length * Math.sqrt(3.0) / 2.0, tCory3 = length * Math.sqrt(3.0) / 2.0;
		
		
		final Triangle main_triangle1 = new Triangle(length, tCorx1, tCorx2, tCorx3, tCory1, tCory2, tCory3);
		final Rectangle small_rectangle2 = new Rectangle(small_width, small_height);
		main_triangle1.setType("TRIANGLE");
		small_rectangle2.setType("rectangle");
		final ComposedShape shapes4 = new ComposedShape(main_triangle1, small_rectangle2);
		shapes4.setBigChar('T');
		shapes4.setSmallChar('R');
		final int shapes4_counter = shapes4.optimalFit();
		
		
		final Triangle main_triangle2 = new Triangle(length, tCorx1, tCorx2, tCorx3, tCory1, tCory2, tCory3);
		final Triangle small_triangle2 = new Triangle(small_length);
		main_triangle2.setType("TRIANGLE");
		small_triangle2.setType("triangle");
		final ComposedShape shapes5 = new ComposedShape(main_triangle2, small_triangle2);
		shapes5.setBigChar('T');
		shapes5.setSmallChar('T');
		final int shapes5_counter = shapes5.optimalFit();
	
	
		final Triangle main_triangle3 = new Triangle(length, tCorx1, tCorx2, tCorx3, tCory1, tCory2, tCory3);
		final Circle small_circle2 =  new Circle(small_radius);
		main_triangle3.setType("TRIANGLE");
		small_circle2.setType("circle");
		final ComposedShape shapes6 = new ComposedShape(main_triangle3, small_circle2);
		shapes6.setBigChar('T');
		shapes6.setSmallChar('C');
		final int shapes6_counter = shapes6.optimalFit();
		

		//////////////////////////////////////CIRCLE///////////////////////////////////////////////
		
		double radius = 375.0;
		small_width = 120.0;
		small_height = 75.0;
		small_radius = 77.0;
		small_length = 100.0;
		double cCorx = radius;
		double cCory = radius;
		
		final Circle main_circle1 =  new Circle(radius,cCorx,cCory);
		final Rectangle small_rectangle3 = new Rectangle(small_width,small_height);
		main_circle1.setType("CIRCLE");
		small_rectangle3.setType("rectangle");
		final ComposedShape shapes7 = new ComposedShape(main_circle1, small_rectangle3);
		shapes7.setBigChar('C');
		shapes7.setSmallChar('R');
		final int shapes7_counter = shapes7.optimalFit();

		
		final Circle main_circle2 = new Circle(radius,cCorx,cCory);
		final Triangle small_triangle3 = new Triangle(small_length);
		main_circle2.setType("CIRCLE");
		small_triangle3.setType("triangle");
		final ComposedShape shapes8 = new ComposedShape(main_circle2, small_triangle3);
		shapes8.setBigChar('C');
		shapes8.setSmallChar('T');
		final int shapes8_counter = shapes8.optimalFit();
	
		
		final Circle main_circle3 = new Circle(radius,cCorx,cCory);
		final Circle small_circle3 = new Circle(small_radius);
		main_circle3.setType("CIRCLE");
		small_circle3.setType("circle");
		final ComposedShape shapes9 = new ComposedShape(main_circle3, small_circle3);
		shapes9.setBigChar('C');
		shapes9.setSmallChar('C');
		final int shapes9_counter = shapes9.optimalFit();
		
		
		final PolygonDyn PolDyn1 = new PolygonDyn(main_rectangle1);
		
		final PolygonDyn PolDyn2 = new PolygonDyn(main_triangle1);

		final PolygonDyn PolDyn3 = new PolygonDyn(small_circle1);

		final PolygonVect PolVect1 = new PolygonVect(main_rectangle1);

		final PolygonVect PolVect2 = new PolygonVect(main_triangle1);

		final PolygonVect PolVect3 = new PolygonVect(small_circle1);
		
		
		//SORTALL ICIN
		Shape [] shape_Array = new Shape[9];
		shape_Array[0] = small_rectangle1;
		shape_Array[1] = small_rectangle2;
		shape_Array[2] = small_rectangle3;
		shape_Array[3] = small_triangle1;
		shape_Array[4] = small_triangle2;
		shape_Array[5] = small_triangle3;
		shape_Array[6] = small_circle1;
		shape_Array[7] = small_circle2;
		shape_Array[8] = small_circle3;
		
		//CONVERTALL ICIN
		Shape [] shape_Array2 = new Shape[3];
		shape_Array2[0] = small_rectangle1;
		shape_Array2[1] = small_triangle1;
		shape_Array2[2] = small_circle1;
		
		
		//PRINTALL ICIN
		Shape [] shape_Array3 = new Shape[21];
		shape_Array3[0] = shapes1;
		shape_Array3[1] = shapes2;
		shape_Array3[2] = shapes3;
		shape_Array3[3] = shapes4;
		shape_Array3[4] = shapes5;
		shape_Array3[5] = shapes6;
		shape_Array3[6] = shapes7;
		shape_Array3[7] = shapes8;
		shape_Array3[8] = shapes9;
		shape_Array3[9] = PolDyn1;
		shape_Array3[10] = PolDyn2; 
		shape_Array3[11] = PolDyn3;
		shape_Array3[12] = PolVect1;
		shape_Array3[13] = PolVect2;
		shape_Array3[14] = PolVect3;
		shape_Array3[15] = small_rectangle1;
		shape_Array3[16] = small_triangle1;
		shape_Array3[17] = small_circle1;
		shape_Array3[18] = main_rectangle1;
		shape_Array3[19] = main_triangle1;
		shape_Array3[20] = main_circle1;

		System.out.printf("\n*********sortAll*********\n");
		
		SeparateClass.sortShapes(shape_Array); //Sorting
		
		System.out.printf("\n*********convertAll*********\n");
		
		System.out.printf("Before convertAll\n");
		for(int i = 0; i < shape_Array2.length; ++i)
			System.out.printf("shape_Array[%d] = %s\n", i,  shape_Array2[i].getClass().getName());
		
		Shape [] shape_Array4 = new Shape[3]; //ConvertAll sonucu icin
		
		shape_Array4 = SeparateClass.convertAll(shape_Array2);
		
		System.out.printf("After convertAll\n");
		for(int i = 0; i < shape_Array2.length; ++i)
			System.out.printf("shape_Array[%d] = %s\n", i,  shape_Array4[i].getClass().getName());
		

		
		//BU SATIR YORUMDAN KALDIRILDIGINDA 21 TANE PANEL ACILIP BUTUN SEKILLER CIZDIRILIR
		//SeparateClass.drawAll(shape_Array3);
		
		
		
		
		System.out.printf("\n*********compareTo*********\n");
		
		int compareTo_test1 = small_rectangle1.compareTo(small_circle2);
		System.out.printf("small_rectangle1.area() = %.3f\n",small_rectangle1.area());
		System.out.printf("small_circle2.area() = %.3f\n",small_circle2.area());
		System.out.printf("small_rectangle1.compareTo(small_circle2) =  %d\n",compareTo_test1);
	
		
		int compareTo_test2 = small_triangle1.compareTo(small_rectangle3);
		System.out.printf("small_triangle1.area() = %.3f\n",small_triangle1.area());
		System.out.printf("small_rectangle3.area() = %.3f\n",small_rectangle3.area());
		System.out.printf("small_triangle1.compareTo(small_rectangle3) =  %d\n",compareTo_test2);
		
		
		int compareTo_test3 = small_circle2.compareTo(small_circle2);
		System.out.printf("small_circle2.area() = %.3f\n",small_circle2.area());
		System.out.printf("small_circle2.area() = %.3f\n",small_circle2.area());
		System.out.printf("small_triangle1.compareTo(small_rectangle3) =  %d\n",compareTo_test3);
		
		
		PolygonDyn Pol_compareTo1 = new PolygonDyn(main_triangle1);
		int compareTo_test4 = Pol_compareTo1.compareTo(main_triangle1);
		System.out.printf("Pol_compareTo1.area() = %.3f\n",Pol_compareTo1.area());
		System.out.printf("main_triangle1.area() = %.3f\n",main_triangle1.area());
		System.out.printf("Pol_compareTo1.compareTo(main_triangle1) =  %d\n",compareTo_test4);

		
		PolygonVect Pol_compareTo2 = new PolygonVect(main_triangle1);
		int compareTo_test5 = Pol_compareTo2.compareTo(main_rectangle2);
		System.out.printf("Pol_compareTo2.area() = %.3f\n",Pol_compareTo2.area());
		System.out.printf("main_rectangle2.area() = %.3f\n",main_rectangle2.area());
		System.out.printf("Pol_compareTo2.compareTo(main_rectangle2) =  %d\n",compareTo_test5);
		
		

		PolygonDyn Pol_compareTo3 = new PolygonDyn(main_circle3);
		int compareTo_test6 = Pol_compareTo3.compareTo(small_triangle1);
		System.out.printf("Pol_compareTo3.area() = %.3f\n",Pol_compareTo3.area());
		System.out.printf("small_triangle1.area() = %.3f\n",small_triangle1.area());
		System.out.printf("Pol_compareTo3.compareTo(small_triangle1) =  %d\n",compareTo_test6);
		
		System.out.printf("\n*********increment&decrement*********\n");
		
		Rectangle rec = new Rectangle(100.0,100.0,0.0,0.0);
		System.out.printf("rec.getCor_x() : %.2f     rec.getCor_y() : %.2f\n",rec.getCor_x(),rec.getCor_y());
		rec.increment();
		System.out.printf("After increment -----> rec.getCor_x() : %.2f     rec.getCor_y() : %.2f\n",rec.getCor_x(),rec.getCor_y());
		rec.decrement();
		System.out.printf("After decrement -----> rec.getCor_x() : %.2f     rec.getCor_y() : %.2f\n",rec.getCor_x(),rec.getCor_y());
		
		System.out.printf("\n");
		
		Triangle tri = new Triangle(900.0, 900.0/2.0, 0.0, 900.0, 0.0, 900.0 * Math.sqrt(3.0) / 2.0, 900.0 * Math.sqrt(3.0) / 2.0);
		System.out.printf("tri.getCor_x1() : %.2f     tri.getCor_x2() : %.2f     tri.getCor_x3() : %.2f\n",tri.getCor_x1(),tri.getCor_x2(),tri.getCor_x3());
		System.out.printf("tri.getCor_y1() : %.2f     tri.getCor_y2() : %.2f     tri.getCor_y3() : %.2f\n",tri.getCor_y1(),tri.getCor_y2(),tri.getCor_y3());
		tri.increment();
		System.out.printf("After increment -----> tri.getCor_x1() : %.2f     tri.getCor_x2() : %.2f     tri.getCor_x3() : %.2f\n",tri.getCor_x1(),tri.getCor_x2(),tri.getCor_x3());
		System.out.printf("After increment -----> tri.getCor_y1() : %.2f     tri.getCor_y2() : %.2f     tri.getCor_y3() : %.2f\n",tri.getCor_y1(),tri.getCor_y2(),tri.getCor_y3());
		tri.decrement();
		System.out.printf("After decrement -----> tri.getCor_x1() : %.2f     tri.getCor_x2() : %.2f     tri.getCor_x3() : %.2f\n",tri.getCor_x1(),tri.getCor_x2(),tri.getCor_x3());
		System.out.printf("After decrement -----> tri.getCor_y1() : %.2f     tri.getCor_y2() : %.2f     tri.getCor_y3() : %.2f\n",tri.getCor_y1(),tri.getCor_y2(),tri.getCor_y3());
		
		System.out.printf("\n");
		
		Circle cir = new Circle(100.0,100.0,100.0);
		System.out.printf("cir.getCenter_x() : %.2f     cir.getCenter_y() : %.2f\n",cir.getCenter_x(),cir.getCenter_y());
		cir.increment();
		System.out.printf("After increment -----> cir.getCenter_x() : %.2f     cir.getCenter_y() : %.2f\n",cir.getCenter_x(),cir.getCenter_y());
		cir.decrement();
		System.out.printf("After decrement -----> cir.getCenter_x() : %.2f     cir.getCenter_y() : %.2f\n",cir.getCenter_x(),cir.getCenter_y());
		
		
		System.out.printf("\n*********perimeter*********\n");
		System.out.printf("small_rectangle1.perimeter() : %.3f\n",small_rectangle1.perimeter());
		System.out.printf("small_triangle1.perimeter() : %.3f\n",small_triangle1.perimeter());
		System.out.printf("small_circle1.perimeter() : %.3f\n",small_circle1.perimeter());
		
		PolygonDyn PolygonDyn_perimeter1 = new PolygonDyn(small_rectangle1);
		System.out.printf("PolygonDyn_perimeter1.perimeter() : %.3f\n",PolygonDyn_perimeter1.perimeter());
		
		PolygonVect PolygonVect_perimeter1 = new PolygonVect(small_triangle1);
		System.out.printf("PolygonVect_perimeter1.perimeter() : %.3f\n",PolygonVect_perimeter1.perimeter());
		
		PolygonVect PolygonVect_perimeter2 = new PolygonVect(small_circle1);
		System.out.printf("PolygonVect_perimeter2.perimeter() : %.3f\n",PolygonVect_perimeter2.perimeter());
		
		
		System.out.printf("\n***********ONEMLI***********\n" +
				"mainapp' in 246. satirindaki yorum ifadefi kaldirilirsa drawAll fonksiyonu calisir\n//SeparateClass.drawAll(shape_Array3);\n");
		
		//Create a frame to contain all other GUI elements
		frame = new JFrame();
		frame.setTitle("151044058_CSE241_HW7");
		frame.setBounds(40, 40, 1100, 950);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		//Create a panel for drawing shapes, you can think this as canvas
		final JPanel panel = new JPanel();
		panel.setBackground(Color.WHITE);
		panel.setBounds(10, 11, 800, 800);
		frame.getContentPane().add(panel); // panel reference copied
		


		JButton btnClear = new JButton("CLEAR");
		btnClear.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics(); // get brush
				g.setColor(Color.WHITE); // from now on, use white color
				g.fillRect(0, 0, panel.getWidth(), panel.getHeight()); 
				panel.paintComponents(g); // the panel will change when THIS function is executed
			
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				txtpnAliHaydarKurban.setText(" ");
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btnClear.setBounds(900, 860, 100, 23);
		frame.getContentPane().add(btnClear); // button reference copied
		
		
		
		JButton btn1 = new JButton("RECTANGLE Rectangle");
		btn1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				
				Graphics g = panel.getGraphics();
				shapes1.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num1 = new Integer(shapes1_counter).toString();
				double alan1 = main_rectangle1.area() - shapes1_counter * small_rectangle1.area();
				txtpnAliHaydarKurban.setText("FITTING RECTANGLE WITH RECTANGLE\nI can fit at " + num1 + " small shapes into the main container.\nThe empty area (red) in "+ alan1);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
				
			}
		});

		btn1.setBounds(850, 50, 200, 23);
		frame.getContentPane().add(btn1); 
		
		JButton btn2 = new JButton("RECTANGLE Triangle");
		btn2.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				shapes2.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num2 = new Integer(shapes2_counter).toString();
				double alan2 = main_rectangle2.area() - shapes2_counter * small_triangle1.area();
				txtpnAliHaydarKurban.setText("FITTING RECTANGLE WITH TRIANGLE\nI can fit at " + num2 + " small shapes into the main container.\nThe empty area (red) in "+ alan2);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn2.setBounds(850, 100, 200, 23);
		frame.getContentPane().add(btn2); 
		
		
		JButton btn3 = new JButton("RECTANGLE Cirle");
		btn3.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				
				Graphics g = panel.getGraphics();
				shapes3.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num3 = new Integer(shapes3_counter).toString();
				double alan3 = main_rectangle3.area() - shapes3_counter * small_circle1.area();
				txtpnAliHaydarKurban.setText("FITTING RECTANGLE WITH CIRCLE\nI can fit at " + num3 + " small shapes into the main container.\nThe empty area (red) in "+ alan3);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn3.setBounds(850, 150, 200, 23);
		frame.getContentPane().add(btn3); 
		
		
		JButton btn4 = new JButton("TRIANGLE Rectangle");
		btn4.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				
				Graphics g = panel.getGraphics();
				shapes4.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num4 = new Integer(shapes4_counter).toString();
				double alan4 = main_triangle1.area() - shapes4_counter * small_rectangle2.area();
				txtpnAliHaydarKurban.setText("FITTING TRIANGLE WITH RECTANGLE\nI can fit at " + num4 + " small shapes into the main container.\nThe empty area (red) in "+ alan4);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
				
			}
		});

		btn4.setBounds(850, 200, 200, 23);
		frame.getContentPane().add(btn4); 
		
		
		JButton btn5 = new JButton("TRIANGLE Triangle");
		btn5.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				shapes5.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num5 = new Integer(shapes5_counter).toString();
				double alan5 = main_triangle2.area() - shapes5_counter * small_triangle2.area();
				txtpnAliHaydarKurban.setText("FITTING TRIANGLE WITH TRIANGLE\nI can fit at " + num5 + " small shapes into the main container.\nThe empty area (red) in "+ alan5);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn5.setBounds(850, 250, 200, 23);
		frame.getContentPane().add(btn5); 
		
		
		JButton btn6 = new JButton("TRIANGLE Circle");
		btn6.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				
				Graphics g = panel.getGraphics();
				shapes6.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num6 = new Integer(shapes6_counter).toString();
				double alan6 = main_triangle3.area() - shapes6_counter * small_circle2.area();
				txtpnAliHaydarKurban.setText("FITTING TRIANGLE WITH CIRCLE\nI can fit at " + num6 + " small shapes into the main container.\nThe empty area (red) in "+ alan6);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn6.setBounds(850, 300, 200, 23);
		frame.getContentPane().add(btn6); 
		
		
		JButton btn7 = new JButton("CIRCLE Rectangle");
		btn7.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				
				Graphics g = panel.getGraphics();
				shapes7.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num7 = new Integer(shapes7_counter).toString();
				double alan7 = main_circle1.area() - shapes7_counter * small_rectangle3.area();
				txtpnAliHaydarKurban.setText("FITTING CIRCLE WITH RECTANGLE\nI can fit at " + num7 + " small shapes into the main container.\nThe empty area (red) in "+ alan7);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn7.setBounds(850, 350, 200, 23);
		frame.getContentPane().add(btn7); 
		
		
		JButton btn8 = new JButton("CIRCLE Triangle");
		btn8.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				shapes8.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num8 = new Integer(shapes8_counter).toString();
				double alan8 = main_circle2.area() - shapes8_counter * small_triangle3.area();
				txtpnAliHaydarKurban.setText("FITTING CIRCLE WITH TRIANGLE\nI can fit at " + num8 + " small shapes into the main container.\nThe empty area (red) in "+ alan8);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
				
			}
		});

		btn8.setBounds(850, 400, 200, 23);
		frame.getContentPane().add(btn8); 
		
		
		JButton btn9 = new JButton("CIRCLE Circle");
		btn9.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				shapes9.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				String num9 = new Integer(shapes9_counter).toString();
				double alan9 = main_circle3.area() - shapes9_counter * small_circle3.area();
				txtpnAliHaydarKurban.setText("FITTING CIRCLE WITH CIRCLE\nI can fit at " + num9 + " small shapes into the main container.\nThe empty area (red) in "+ alan9);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn9.setBounds(850, 450, 200, 23);
		frame.getContentPane().add(btn9); 
		
		
		JButton btn10 = new JButton("PolygonDyn Rectangle");
		btn10.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				PolDyn1.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				double alan10 = PolDyn1.area();
				txtpnAliHaydarKurban.setText("POLYDONDYN RECTANGLE\nArea is " + alan10);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn10.setBounds(850, 500, 200, 23);
		frame.getContentPane().add(btn10);
		
		JButton btn11 = new JButton("PolygonDyn Triangle");
		btn11.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				PolDyn2.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				double alan11 = PolDyn2.area();
				txtpnAliHaydarKurban.setText("POLYDONDYN TRIANGLE\nArea is " + alan11);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn11.setBounds(850, 550, 200, 23);
		frame.getContentPane().add(btn11);
		
		JButton btn12 = new JButton("PolygonDyn Circle");
		btn12.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				PolDyn3.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				double alan12 = PolDyn3.area();
				txtpnAliHaydarKurban.setText("POLYDONDYN CIRCLE\nArea is " + alan12);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn12.setBounds(850, 600, 200, 23);
		frame.getContentPane().add(btn12);
		
		
		
		JButton btn13 = new JButton("PolygonVect Rectangle");
		btn13.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				PolVect1.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				double alan13 = PolVect1.area();
				txtpnAliHaydarKurban.setText("POLYDONVECT RECTANGLE\nArea is " + alan13);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn13.setBounds(850, 650, 200, 23);
		frame.getContentPane().add(btn13);
		
		JButton btn14 = new JButton("PolygonVect Triangle");
		btn14.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				PolVect2.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				double alan14 = PolVect2.area();
				txtpnAliHaydarKurban.setText("POLYDONVECT TRIANGLE\nArea is " + alan14);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn14.setBounds(850, 700, 200, 23);
		frame.getContentPane().add(btn14);
		
		JButton btn15 = new JButton("PolygonVect Circle");
		btn15.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {

				Graphics g = panel.getGraphics();
				PolVect3.paintComponent(g);
				panel.paintComponents(g);
				
				JTextPane txtpnAliHaydarKurban = new JTextPane();
				double alan15 = PolVect3.area();
				txtpnAliHaydarKurban.setText("POLYDONVECT CIRCLE\nArea is " + alan15);
				txtpnAliHaydarKurban.setBounds(70, 830, 700, 70);
				frame.getContentPane().add(txtpnAliHaydarKurban);
			}
		});

		btn15.setBounds(850, 750, 200, 23);
		frame.getContentPane().add(btn15);

	}
}
